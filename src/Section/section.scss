@import "../index.scss";

.nes-container {
  h3:first-child {
    overflow: hidden;
  }
  p:first-child {
    height: 0.5rem;
  }
}

@each $c in primary, success, warning, error, disabled {
  .nes-container.nes-container_#{$c} {
    border-color: map-get($colors, $c);
    color: map-get($colors, $c);
    &.is-rounded {
      border-image-source: url('data:image/svg+xml;utf8,<?xml version="1.0" encoding="UTF-8" ?><svg version="1.1" width="8" height="8" xmlns="http://www.w3.org/2000/svg"><path d="M3 1 h1 v1 h-1 z M4 1 h1 v1 h-1 z M2 2 h1 v1 h-1 z M5 2 h1 v1 h-1 z M1 3 h1 v1 h-1 z M6 3 h1 v1 h-1 z M1 4 h1 v1 h-1 z M6 4 h1 v1 h-1 z M2 5 h1 v1 h-1 z M5 5 h1 v1 h-1 z M3 6 h1 v1 h-1 z M4 6 h1 v1 h-1 z" fill="'+rgba(
          map-get($colors, $c),
          0.99
        )+'" /></svg>');
    }
  }
}

@each $c in primary-shadow, success-shadow, warning-shadow, error-shadow,
  disabled-shadow
{
  .nes-container.nes-container-filled_#{$c} {
    background-color: map-get($colors, $c);
  }
}

.with-title_flow {
  p:first-child {
    animation: movement 6s linear infinite normal;
  }
  @keyframes movement {
    0% {
      transform: translateX(-120%);
      -webkit-transform: translateX(-120%);
    }
    40% {
      transform: translateX(0%);
      -webkit-transform: translateX(0%);
    }
    60% {
      transform: translateX(0%);
      -webkit-transform: translateX(0%);
    }
    100% {
      transform: translateX(120%);
      -webkit-transform: translateX(120%);
    }
  }
}
